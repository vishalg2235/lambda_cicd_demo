Resources:
  DemoRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Demo lambda role
      RoleName: DemoRoleName
      Policies:
        - PolicyName: DemoLambdaRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: arn:aws:logs:ap-south-1:173829655778:*
              
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - arn:aws:logs:ap-south-1:173829655778:log-group:/aws/lambda/DemoLambda:*

  DemoLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code: 
        ZipFile: |
          exports.handler = async (event) => {
            // TODO implement
            const response = {
                statusCode: 200,
                body: JSON.stringify('CloudFormation deployment successful!'),
            };
            return response;
          };
      Description: A demo function created from cloudformation
      FunctionName: DemoLambda
      # Layers: 
      #   - String
      MemorySize: 512
      PackageType: Zip
      Role: !GetAtt DemoRole.Arn
      Runtime: nodejs14.x
      Timeout: 300
      Handler: index.handler